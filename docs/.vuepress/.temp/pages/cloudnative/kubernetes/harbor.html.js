export const data = JSON.parse("{\"key\":\"v-1590f620\",\"path\":\"/cloudnative/kubernetes/harbor.html\",\"title\":\"Harbor 安装配置(k8s)\",\"lang\":\"zh-CN\",\"frontmatter\":{\"category\":\"云原生\",\"tag\":[\"Kubernetes\"],\"description\":\"Harbor 安装配置(k8s) # 下载 helm charts helm repo add harbor https://helm.goharbor.io helm repo update helm pull harbor/harbor --version=1.9.4 tar -xvf harbor-1.9.4.tgz # 配置 tls secret ## 下载nginx使用的 key 和 pem 传到服务器，并重命名为 tls.xxx ## 使用 openssl 把 pem 证书转换为 crt mkdir harbor-tls cd harbor-tls/ openssl x509 -in tls.pem -out tls.crt kubectl create ns harbor kubectl -n harbor create secret tls harbor-secret --cert=tls.crt --key=tls.key\",\"head\":[[\"meta\",{\"property\":\"og:url\",\"content\":\"https://clay-wangzhi.com/cloudnative/kubernetes/harbor.html\"}],[\"meta\",{\"property\":\"og:site_name\",\"content\":\"SRE运维进阶之路\"}],[\"meta\",{\"property\":\"og:title\",\"content\":\"Harbor 安装配置(k8s)\"}],[\"meta\",{\"property\":\"og:description\",\"content\":\"Harbor 安装配置(k8s) # 下载 helm charts helm repo add harbor https://helm.goharbor.io helm repo update helm pull harbor/harbor --version=1.9.4 tar -xvf harbor-1.9.4.tgz # 配置 tls secret ## 下载nginx使用的 key 和 pem 传到服务器，并重命名为 tls.xxx ## 使用 openssl 把 pem 证书转换为 crt mkdir harbor-tls cd harbor-tls/ openssl x509 -in tls.pem -out tls.crt kubectl create ns harbor kubectl -n harbor create secret tls harbor-secret --cert=tls.crt --key=tls.key\"}],[\"meta\",{\"property\":\"og:type\",\"content\":\"article\"}],[\"meta\",{\"property\":\"og:locale\",\"content\":\"zh-CN\"}],[\"meta\",{\"property\":\"article:author\",\"content\":\"Clay\"}],[\"meta\",{\"property\":\"article:tag\",\"content\":\"Kubernetes\"}],[\"script\",{\"type\":\"application/ld+json\"},\"{\\\"@context\\\":\\\"https://schema.org\\\",\\\"@type\\\":\\\"Article\\\",\\\"headline\\\":\\\"Harbor 安装配置(k8s)\\\",\\\"image\\\":[\\\"\\\"],\\\"dateModified\\\":null,\\\"author\\\":[{\\\"@type\\\":\\\"Person\\\",\\\"name\\\":\\\"Clay\\\",\\\"url\\\":\\\"https://clay-wangzhi.com\\\"}]}\"]]},\"headers\":[],\"readingTime\":{\"minutes\":0.76,\"words\":227},\"filePathRelative\":\"cloudnative/kubernetes/harbor.md\",\"excerpt\":\"<h1> Harbor 安装配置(k8s)</h1>\\n<div class=\\\"language-bash line-numbers-mode\\\" data-ext=\\\"sh\\\"><pre class=\\\"language-bash\\\"><code><span class=\\\"token comment\\\"># 下载 helm charts</span>\\nhelm repo <span class=\\\"token function\\\">add</span> harbor https://helm.goharbor.io\\nhelm repo update\\nhelm pull harbor/harbor <span class=\\\"token parameter variable\\\">--version</span><span class=\\\"token operator\\\">=</span><span class=\\\"token number\\\">1.9</span>.4\\n<span class=\\\"token function\\\">tar</span> <span class=\\\"token parameter variable\\\">-xvf</span> harbor-1.9.4.tgz\\n\\n<span class=\\\"token comment\\\"># 配置 tls secret</span>\\n<span class=\\\"token comment\\\">## 下载nginx使用的 key 和 pem 传到服务器，并重命名为 tls.xxx</span>\\n<span class=\\\"token comment\\\">## 使用 openssl 把 pem 证书转换为 crt</span>\\n<span class=\\\"token function\\\">mkdir</span> harbor-tls\\n<span class=\\\"token builtin class-name\\\">cd</span> harbor-tls/\\nopenssl x509 <span class=\\\"token parameter variable\\\">-in</span>  tls.pem <span class=\\\"token parameter variable\\\">-out</span> tls.crt\\nkubectl create ns harbor\\nkubectl <span class=\\\"token parameter variable\\\">-n</span> harbor create secret tls harbor-secret   <span class=\\\"token parameter variable\\\">--cert</span><span class=\\\"token operator\\\">=</span>tls.crt   <span class=\\\"token parameter variable\\\">--key</span><span class=\\\"token operator\\\">=</span>tls.key\\n</code></pre><div class=\\\"line-numbers\\\" aria-hidden=\\\"true\\\"><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div></div></div>\",\"copyright\":{\"author\":\"Clay\"},\"autoDesc\":true}")

if (import.meta.webpackHot) {
  import.meta.webpackHot.accept()
  if (__VUE_HMR_RUNTIME__.updatePageData) {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  }
}

if (import.meta.hot) {
  import.meta.hot.accept(({ data }) => {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  })
}
